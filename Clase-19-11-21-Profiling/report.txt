--------------------------------------------------------------------------------
I1 cache:         32768 B, 64 B, 8-way associative
D1 cache:         32768 B, 64 B, 8-way associative
LL cache:         9437184 B, 64 B, 18-way associative
Command:          ./a.out 10000 20000
Data file:        cachegrind.out.3663
Events recorded:  Ir I1mr ILmr Dr D1mr DLmr Dw D1mw DLmw
Events shown:     Ir I1mr ILmr Dr D1mr DLmr Dw D1mw DLmw
Event sort order: Ir I1mr ILmr Dr D1mr DLmr Dw D1mw DLmw
Thresholds:       0.1 100 100 100 100 100 100 100 100
Include dirs:     
User annotated:   
Auto-annotation:  on

--------------------------------------------------------------------------------
Ir                     I1mr           ILmr           Dr                     D1mr            DLmr           Dw                   D1mw                 DLmw                
--------------------------------------------------------------------------------
8,402,528,770 (100.0%) 1,869 (100.0%) 1,791 (100.0%) 4,600,666,242 (100.0%) 25,938 (100.0%) 8,717 (100.0%) 600,217,122 (100.0%) 250,002,574 (100.0%) 75,020,981 (100.0%)  PROGRAM TOTALS

--------------------------------------------------------------------------------
Ir                     I1mr         ILmr         Dr                     D1mr            DLmr           Dw                   D1mw                 DLmw                 file:function
--------------------------------------------------------------------------------
3,000,090,014 (35.70%)   2 ( 0.11%)   2 ( 0.11%) 1,600,050,004 (34.78%)      1 ( 0.00%)     1 ( 0.01%) 200,010,006 (33.32%) 200,000,000 (80.00%) 25,019,650 (33.35%)  /home/soguevaram/HerramientasComp/Clase-19-11-21-Profiling/cache_chrono.cpp:option2(long*, long, long)
3,000,090,014 (35.70%)   2 ( 0.11%)   2 ( 0.11%) 1,600,050,004 (34.78%)      1 ( 0.00%)     1 ( 0.01%) 200,010,006 (33.32%)  25,000,000 (10.00%) 25,000,000 (33.32%)  /home/soguevaram/HerramientasComp/Clase-19-11-21-Profiling/cache_chrono.cpp:option1(long*, long, long)
2,400,000,015 (28.56%)   1 ( 0.05%)   1 ( 0.06%) 1,400,000,005 (30.43%)      1 ( 0.00%)     1 ( 0.01%) 200,000,006 (33.32%)  25,000,001 (10.00%) 24,999,651 (33.32%)  /home/soguevaram/HerramientasComp/Clase-19-11-21-Profiling/cache_chrono.cpp:option3(long*, long, long)

--------------------------------------------------------------------------------
-- Auto-annotated source: /home/soguevaram/HerramientasComp/Clase-19-11-21-Profiling/cache_chrono.cpp
--------------------------------------------------------------------------------
Ir                     I1mr       ILmr       Dr                     D1mr       DLmr       Dw                   D1mw                 DLmw                

-- line 9 ----------------------------------------
            .          .          .                      .          .          .                    .                    .                   .           
            .          .          .                      .          .          .                    .                    .                   .           template <typename T>
            .          .          .                      .          .          .                    .                    .                   .           void print_elapsed(T & start, T & end );
            .          .          .                      .          .          .                    .                    .                   .           void option1(long * data, long isize, long jsize);
            .          .          .                      .          .          .                    .                    .                   .           void option2(long * data, long isize, long jsize);
            .          .          .                      .          .          .                    .                    .                   .           void option3(long * data, long isize, long jsize);
            .          .          .                      .          .          .                    .                    .                   .           
            .          .          .                      .          .          .                    .                    .                   .           int main(int argc, char **argv)
            6 ( 0.00%) 0          0                      0          0          0                    4 ( 0.00%)           0                   0           {
            2 ( 0.00%) 0          0                      1 ( 0.00%) 0          0                    0                    0                   0             if (argc < 3){
            .          .          .                      .          .          .                    .                    .                   .               printf("Usage: cacheTest sizeI sizeJ\nIn first input.\n");
            .          .          .                      .          .          .                    .                    .                   .               return 1;
            .          .          .                      .          .          .                    .                    .                   .             }
            7 ( 0.00%) 1 ( 0.05%) 1 ( 0.06%)             2 ( 0.00%) 1 ( 0.00%) 0                    2 ( 0.00%)           0                   0             long sI = atoi(argv[1]);
            7 ( 0.00%) 1 ( 0.05%) 1 ( 0.06%)             2 ( 0.00%) 0          0                    2 ( 0.00%)           0                   0             long sJ = atoi(argv[2]);
            .          .          .                      .          .          .                    .                    .                   .           
            6 ( 0.00%) 0          0                      2 ( 0.00%) 0          0                    1 ( 0.00%)           0                   0             printf("Operating on matrix of size %ld by %ld\n", sI, sJ);
            2 ( 0.00%) 0          0                      0          0          0                    2 ( 0.00%)           0                   0             auto start = std::chrono::steady_clock::now();
            9 ( 0.00%) 1 ( 0.05%) 1 ( 0.06%)             2 ( 0.00%) 0          0                    2 ( 0.00%)           0                   0             long *arr = new long[sI*sJ]; // double array.
            2 ( 0.00%) 0          0                      0          0          0                    2 ( 0.00%)           0                   0             auto end = std::chrono::steady_clock::now();
            5 ( 0.00%) 0          0                      0          0          0                    1 ( 0.00%)           0                   0             print_elapsed(start, end);
            .          .          .                      .          .          .                    .                    .                   .             
            .          .          .                      .          .          .                    .                    .                   .             // option 1
            2 ( 0.00%) 0          0                      0          0          0                    2 ( 0.00%)           0                   0             start = std::chrono::steady_clock::now();
            6 ( 0.00%) 1 ( 0.05%) 1 ( 0.06%)             3 ( 0.00%) 0          0                    1 ( 0.00%)           0                   0             option1(arr, sI, sJ);
            2 ( 0.00%) 0          0                      0          0          0                    2 ( 0.00%)           0                   0             end = std::chrono::steady_clock::now();
            5 ( 0.00%) 0          0                      0          0          0                    1 ( 0.00%)           0                   0             print_elapsed(start, end);
            .          .          .                      .          .          .                    .                    .                   .             
            .          .          .                      .          .          .                    .                    .                   .             // option 2
            2 ( 0.00%) 0          0                      0          0          0                    2 ( 0.00%)           0                   0             start = std::chrono::steady_clock::now();
            6 ( 0.00%) 1 ( 0.05%) 1 ( 0.06%)             3 ( 0.00%) 1 ( 0.00%) 1 ( 0.01%)           1 ( 0.00%)           0                   0             option2(arr, sI, sJ);
            2 ( 0.00%) 0          0                      0          0          0                    2 ( 0.00%)           0                   0             end = std::chrono::steady_clock::now();
            5 ( 0.00%) 0          0                      0          0          0                    1 ( 0.00%)           0                   0             print_elapsed(start, end);
            .          .          .                      .          .          .                    .                    .                   .           
            .          .          .                      .          .          .                    .                    .                   .             // option 3
            2 ( 0.00%) 0          0                      0          0          0                    2 ( 0.00%)           0                   0             start = std::chrono::steady_clock::now();
            6 ( 0.00%) 1 ( 0.05%) 1 ( 0.06%)             3 ( 0.00%) 1 ( 0.00%) 1 ( 0.01%)           1 ( 0.00%)           0                   0             option3(arr, sI, sJ);
            2 ( 0.00%) 0          0                      0          0          0                    2 ( 0.00%)           0                   0             end = std::chrono::steady_clock::now();
            5 ( 0.00%) 0          0                      0          0          0                    1 ( 0.00%)           0                   0             print_elapsed(start, end);
            .          .          .                      .          .          .                    .                    .                   .           
            6 ( 0.00%) 0          0                      2 ( 0.00%) 1 ( 0.00%) 1 ( 0.01%)           1 ( 0.00%)           0                   0             printf("%ld\n", arr[0]);
            .          .          .                      .          .          .                    .                    .                   .             
            2 ( 0.00%) 0          0                      0          0          0                    0                    0                   0             return 0;
            2 ( 0.00%) 0          0                      2 ( 0.00%) 1 ( 0.00%) 1 ( 0.01%)           0                    0                   0           }
            .          .          .                      .          .          .                    .                    .                   .             
            .          .          .                      .          .          .                    .                    .                   .           
            .          .          .                      .          .          .                    .                    .                   .           template <typename T>
           28 ( 0.00%) 1 ( 0.05%) 1 ( 0.06%)             0          0          0                   20 ( 0.00%)           0                   0           void print_elapsed(T & start, T & end )
            .          .          .                      .          .          .                    .                    .                   .           {
           16 ( 0.00%) 1 ( 0.05%) 1 ( 0.06%)             0          0          0                    4 ( 0.00%)           0                   0             std::cout << "Elapsed time in ms: "
           64 ( 0.00%) 0          0                      8 ( 0.00%) 0          0                   24 ( 0.00%)           0                   0           	    << std::chrono::duration_cast<std::chrono::milliseconds>(end-start).count()
           12 ( 0.00%) 0          0                      0          0          0                    4 ( 0.00%)           0                   0           	    << "\n";
           20 ( 0.00%) 0          0                     12 ( 0.00%) 0          0                    0                    0                   0           }
            .          .          .                      .          .          .                    .                    .                   .           
            .          .          .                      .          .          .                    .                    .                   .           void option1(long * data, long isize, long jsize)
            7 ( 0.00%) 1 ( 0.05%) 1 ( 0.06%)             0          0          0                    5 ( 0.00%)           0                   0           {
       50,004 ( 0.00%) 0          0                 30,002 ( 0.00%) 0          0                    1 ( 0.00%)           0                   0               for (long i=0; i < isize; ++i)
1,000,040,000 (11.90%) 1 ( 0.05%) 1 ( 0.06%)   600,020,000 (13.04%) 0          0               10,000 ( 0.00%)           0                   0                   for (long j=0; j < jsize; ++j)
2,000,000,000 (23.80%) 0          0          1,000,000,000 (21.74%) 0          0          200,000,000 (33.32%)  25,000,000 (10.00%) 25,000,000 (33.32%)              data[(i * (jsize)) + j ] = i;
            3 ( 0.00%) 0          0                      2 ( 0.00%) 1 ( 0.00%) 1 ( 0.01%)           0                    0                   0           }
            .          .          .                      .          .          .                    .                    .                   .           
            .          .          .                      .          .          .                    .                    .                   .           void option2(long * data, long isize, long jsize)
            7 ( 0.00%) 1 ( 0.05%) 1 ( 0.06%)             0          0          0                    5 ( 0.00%)           0                   0           {
       50,004 ( 0.00%) 0          0                 30,002 ( 0.00%) 0          0                    1 ( 0.00%)           0                   0               for (long i=0; i < isize; ++i)
1,000,040,000 (11.90%) 0          0            600,020,000 (13.04%) 0          0               10,000 ( 0.00%)           0                   0                   for (long j=0; j < jsize; ++j)
2,000,000,000 (23.80%) 1 ( 0.05%) 1 ( 0.06%) 1,000,000,000 (21.74%) 0          0          200,000,000 (33.32%) 200,000,000 (80.00%) 25,019,650 (33.35%)              data[(j * (isize)) + i ] = i;
            3 ( 0.00%) 0          0                      2 ( 0.00%) 1 ( 0.00%) 1 ( 0.01%)           0                    0                   0           }
            .          .          .                      .          .          .                    .                    .                   .           
            .          .          .                      .          .          .                    .                    .                   .           void option3(long * data, long isize, long jsize)
            7 ( 0.00%) 1 ( 0.05%) 1 ( 0.06%)             0          0          0                    5 ( 0.00%)           0                   0           {
1,200,000,005 (14.28%) 0          0            800,000,003 (17.39%) 0          0                    1 ( 0.00%)           0                   0               for (long i=0; i < isize*jsize; ++i)
1,200,000,000 (14.28%) 0          0            600,000,000 (13.04%) 0          0          200,000,000 (33.32%)  25,000,001 (10.00%) 24,999,651 (33.32%)              data[i] = i;
           24 ( 0.00%) 2 ( 0.11%) 2 ( 0.11%)             8 ( 0.00%) 2 ( 0.01%) 1 ( 0.01%)           7 ( 0.00%)           0                   0           }

--------------------------------------------------------------------------------
Ir                     I1mr        ILmr        Dr                     D1mr       DLmr       Dw                   D1mw                 DLmw                
--------------------------------------------------------------------------------
8,400,180,305 (99.97%) 15 ( 0.80%) 15 ( 0.84%) 4,600,100,061 (99.99%) 9 ( 0.03%) 7 ( 0.08%) 600,020,112 (99.97%) 250,000,001 (100.0%) 75,019,301 (100.0%)  events annotated

